{\rtf1\ansi\ansicpg1251\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red204\green120\blue50;\red43\green43\blue43;\red169\green183\blue198;
\red98\green151\blue85;\red187\green181\blue41;\red255\green198\blue109;\red152\green118\blue170;\red106\green135\blue89;
\red104\green151\blue187;}
{\*\expandedcolortbl;;\csgenericrgb\c80000\c47059\c19608;\csgenericrgb\c16863\c16863\c16863;\csgenericrgb\c66275\c71765\c77647;
\csgenericrgb\c38431\c59216\c33333;\csgenericrgb\c73333\c70980\c16078;\csgenericrgb\c100000\c77647\c42745;\csgenericrgb\c59608\c46275\c66667;\csgenericrgb\c41569\c52941\c34902;
\csgenericrgb\c40784\c59216\c73333;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 package \cf4 org.firstinspires.ftc.teamcode\cf2 ;\uc0\u8232 \u8232 import \cf4 com.qualcomm.robotcore.eventloop.opmode.LinearOpMode\cf2 ;\uc0\u8232 import \cf4 com.qualcomm.robotcore.hardware.DcMotor\cf2 ;\uc0\u8232 import \cf4 com.qualcomm.robotcore.hardware.DcMotorSimple\cf2 ;\uc0\u8232 \u8232 
\f1\i \cf5 /**\uc0\u8232  * Created by alexanderberezovsky on 21.01.17.\u8232  */\u8232 \u8232 
\f0\i0 \cf2 public class \cf4 BlueAuton \cf2 extends \cf4 LinearOpMode \{\uc0\u8232 \u8232 \u8232     \cf6 @Override\uc0\u8232 \u8232     \cf2 public void \cf7 runOpMode\cf4 () \cf2 throws \cf4 InterruptedException\{\uc0\u8232         DcMotor FrontLeft\cf2 ;\uc0\u8232         \cf4 DcMotor BackLeft\cf2 ;\uc0\u8232         \cf4 DcMotor FrontRight\cf2 ;\uc0\u8232         \cf4 DcMotor BackRight\cf2 ;\uc0\u8232 \u8232         \cf4 FrontLeft = \cf8 hardwareMap\cf4 .\cf8 dcMotor\cf4 .get(\cf9 "FrontLeft"\cf4 )\cf2 ;\uc0\u8232         \cf4 FrontRight = \cf8 hardwareMap\cf4 .\cf8 dcMotor\cf4 .get(\cf9 "FrontRight"\cf4 )\cf2 ;\uc0\u8232         \cf4 BackLeft = \cf8 hardwareMap\cf4 .\cf8 dcMotor\cf4 .get(\cf9 "BackLeft"\cf4 )\cf2 ;\uc0\u8232         \cf4 BackRight = \cf8 hardwareMap\cf4 .\cf8 dcMotor\cf4 .get(\cf9 "BackRight"\cf4 )\cf2 ;\uc0\u8232 \u8232         \cf4 FrontRight.setDirection(DcMotorSimple.Direction.
\f1\i \cf8 REVERSE
\f0\i0 \cf4 )\cf2 ;\uc0\u8232         \cf4 BackRight.setDirection(DcMotorSimple.Direction.
\f1\i \cf8 REVERSE
\f0\i0 \cf4 )\cf2 ;\uc0\u8232 \u8232 \u8232         \cf4 waitForStart()\cf2 ;\uc0\u8232 \u8232         \cf4 FrontLeft.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 FrontRight.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 BackLeft.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 BackRight.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 wait(\cf10 2000\cf4 )\cf2 ;\uc0\u8232 \u8232         \cf4 FrontLeft.setPower(-\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 FrontRight.setPower(-\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 BackLeft.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 BackRight.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232 \u8232         \cf4 wait(\cf10 1000\cf4 )\cf2 ;\uc0\u8232 \u8232         \cf4 FrontLeft.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 FrontRight.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 BackLeft.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232         \cf4 BackRight.setPower(\cf10 .5\cf4 )\cf2 ;\uc0\u8232 \u8232         \cf4 wait(\cf10 2000\cf4 )\cf2 ;\uc0\u8232 \u8232         \cf4 FrontLeft.setPower(\cf10 0\cf4 )\cf2 ;\uc0\u8232         \cf4 FrontRight.setPower(\cf10 0\cf4 )\cf2 ;\uc0\u8232         \cf4 BackLeft.setPower(\cf10 0\cf4 )\cf2 ;\uc0\u8232         \cf4 BackRight.setPower(\cf10 0\cf4 )\cf2 ;\uc0\u8232 \u8232 \u8232         \cf4 waitForNextHardwareCycle()\cf2 ;\uc0\u8232 \u8232 \u8232 \u8232 \u8232 \u8232 \u8232 \u8232     \cf4 \}\uc0\u8232 \u8232 \u8232 \u8232 \u8232 \u8232 \}\
}